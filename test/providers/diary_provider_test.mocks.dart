// Mocks generated by Mockito 5.4.6 from annotations
// in kiwi/test/providers/diary_provider_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:kiwi/models/diary_model.dart' as _i4;
import 'package:kiwi/models/year_month.dart' as _i5;
import 'package:kiwi/services/diary_service.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [DiaryService].
///
/// See the documentation for Mockito's code generation for more information.
class MockDiaryService extends _i1.Mock implements _i2.DiaryService {
  MockDiaryService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.Diary>> fetchDiaries({
    required String? userId,
    required DateTime? from,
    required DateTime? to,
    required int? limit,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#fetchDiaries, [], {
              #userId: userId,
              #from: from,
              #to: to,
              #limit: limit,
            }),
            returnValue: _i3.Future<List<_i4.Diary>>.value(<_i4.Diary>[]),
          )
          as _i3.Future<List<_i4.Diary>>);

  @override
  _i3.Future<List<_i4.Diary>> fetchDateDiary({
    required String? userId,
    required DateTime? date,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#fetchDateDiary, [], {
              #userId: userId,
              #date: date,
            }),
            returnValue: _i3.Future<List<_i4.Diary>>.value(<_i4.Diary>[]),
          )
          as _i3.Future<List<_i4.Diary>>);

  @override
  _i3.Future<List<_i5.YearMonth>> fetchPostedMonths({
    required String? userId,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#fetchPostedMonths, [], {#userId: userId}),
            returnValue: _i3.Future<List<_i5.YearMonth>>.value(
              <_i5.YearMonth>[],
            ),
          )
          as _i3.Future<List<_i5.YearMonth>>);

  @override
  _i3.Future<_i4.Diary?> fetchDiary(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#fetchDiary, [id]),
            returnValue: _i3.Future<_i4.Diary?>.value(),
          )
          as _i3.Future<_i4.Diary?>);

  @override
  _i3.Future<int> fetchAverageTextInput({required String? userId}) =>
      (super.noSuchMethod(
            Invocation.method(#fetchAverageTextInput, [], {#userId: userId}),
            returnValue: _i3.Future<int>.value(0),
          )
          as _i3.Future<int>);

  @override
  _i3.Future<void> insertDiary(_i4.Diary? diary) =>
      (super.noSuchMethod(
            Invocation.method(#insertDiary, [diary]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> updateDiary(String? id, _i4.Diary? diary) =>
      (super.noSuchMethod(
            Invocation.method(#updateDiary, [id, diary]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> deleteDiary(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteDiary, [id]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);
}
