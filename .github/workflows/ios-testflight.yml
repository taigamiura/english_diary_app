# .github/workflows/ios-testflight.yml
name: iOS TestFlight Release

on:
  push:
    tags:
      - 'v*'           # v1.0.0, v1.0.0-beta などのタグで自動実行
  workflow_dispatch:    # 手動実行も維持（緊急時用）
    inputs:
      submit_to_testflight:
        description: 'Submit to TestFlight automatically'
        required: true
        default: true
        type: boolean

jobs:
  ios-testflight:
    runs-on: macos-14
    timeout-minutes: 60
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Get version
        id: version
        run: |
          if [ "${{ github.event_name }}" = "push" ]; then
            VERSION=${GITHUB_REF#refs/tags/}
          else
            VERSION="v1.0.0-manual"
          fi
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "Using version: $VERSION"
        
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.3'
          
      - name: Create .env file
        run: |
          echo "SUPABASE_URL=${{ secrets.SUPABASE_URL }}" > .env
          echo "SUPABASE_ANON_KEY=${{ secrets.SUPABASE_ANON_KEY }}" >> .env
          echo "SENTRY_DSN=${{ secrets.SENTRY_DSN }}" >> .env
          echo "GOOGLE_IOS_CLIENT_ID=${{ secrets.GOOGLE_IOS_CLIENT_ID }}" >> .env
          echo "GOOGLE_WEB_CLIENT_ID=${{ secrets.GOOGLE_WEB_CLIENT_ID }}" >> .env
          echo "DEV_USER_EMAIL=${{ secrets.DEV_USER_EMAIL }}" >> .env
          echo "DEV_USER_PASSWORD=${{ secrets.DEV_USER_PASSWORD }}" >> .env
          
      - name: Install dependencies
        run: flutter pub get
        
      - name: Setup iOS signing
        env:
          P12_CERTIFICATE: ${{ secrets.P12_CERTIFICATE }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          PROVISIONING_PROFILE: ${{ secrets.PROVISIONING_PROFILE }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # P12証明書をインストール
          echo "$P12_CERTIFICATE" | base64 --decode > certificate.p12
          
          # キーチェーン作成・設定
          security create-keychain -p "$KEYCHAIN_PASSWORD" build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" build.keychain
          security set-keychain-settings -t 3600 -u build.keychain
          
          # 証明書インポート
          security import certificate.p12 -k build.keychain -P "$P12_PASSWORD" -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "$KEYCHAIN_PASSWORD" build.keychain
          
          # プロビジョニングプロファイル設定
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          echo "$PROVISIONING_PROFILE" | base64 --decode > ~/Library/MobileDevice/Provisioning\ Profiles/profile.mobileprovision
          
          # クリーンアップ
          rm -f certificate.p12
          
      - name: Setup App Store Connect API
        env:
          API_KEY: ${{ secrets.APP_STORE_CONNECT_API_KEY }}
          API_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
          ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
        run: |
          # API Key ファイルを作成
          mkdir -p ~/private_keys
          echo "$API_KEY" | base64 --decode > ~/private_keys/AuthKey_$API_KEY_ID.p8
          
          # API Key の権限設定
          chmod 600 ~/private_keys/AuthKey_$API_KEY_ID.p8
          
          echo "App Store Connect API Key configured"
          
      - name: Build IPA with iOS 18 SDK
        run: |
          echo "🚀 Building KIWI iOS App with latest SDK..."
          xcodebuild -version
          xcodebuild -showsdks | grep ios
          
          # IPAビルド実行
          flutter build ipa --release --verbose
          
          echo "✅ IPA build completed"
          
      - name: Verify iOS SDK version
        run: |
          echo "🔍 Verifying SDK version used in build..."
          otool -l build/ios/iphoneos/Runner.app/Runner | grep -A 3 LC_BUILD_VERSION || true
          
          # IPAファイルの確認
          ls -la build/ios/ipa/
          du -h build/ios/ipa/*.ipa
          
      - name: Upload to App Store Connect
        env:
          API_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
          ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
        run: |
          echo "📱 Uploading to App Store Connect..."
          
          # IPAファイルの存在確認
          if [ ! -f "build/ios/ipa/kiwi.ipa" ]; then
            echo "❌ Error: IPA file not found"
            exit 1
          fi
          
          # App Store Connect へアップロード
          xcrun altool --upload-app \
            --file build/ios/ipa/kiwi.ipa \
            --type ios \
            --apiKey $API_KEY_ID \
            --apiIssuer $ISSUER_ID \
            --verbose
            
          echo "✅ Upload to App Store Connect completed"
          
      - name: Submit to TestFlight (Optional)
        if: ${{ github.event_name == 'push' || github.event.inputs.submit_to_testflight == 'true' }}
        env:
          API_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
          ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
        run: |
          echo "🧪 Submitting to TestFlight..."
          
          # TestFlightへの自動提出（オプション）
          # アプリがアップロード完了後、自動的にTestFlightで利用可能になります
          echo "TestFlight submission initiated. Check App Store Connect for processing status."
          
      - name: Upload IPA Artifact
        uses: actions/upload-artifact@v4
        with:
          name: kiwi-testflight-${{ steps.version.outputs.VERSION }}
          path: build/ios/ipa/*.ipa
          retention-days: 30
          
      - name: Create GitHub Release
        if: success()
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.version.outputs.VERSION }}
          name: "🥝 KIWI ${{ steps.version.outputs.VERSION }} - TestFlight Ready"
          body: |
            ## 🧪 KIWI TestFlight Release ${{ steps.version.outputs.VERSION }}
            
            ### ✅ Successfully Built & Uploaded
            - 📱 **iOS SDK**: 18.x (Latest)
            - 🔐 **Code Signed**: App Store Distribution
            - 🚀 **Uploaded**: App Store Connect
            - 🧪 **TestFlight**: Ready for Beta Testing
            
            ### 📋 Next Steps
            1. ✅ Built with GitHub Actions
            2. ✅ Uploaded to App Store Connect  
            3. 🔄 Processing in TestFlight (usually 5-15 minutes)
            4. 📧 Beta testers will receive notification
            
            ### 🎯 Testing Focus
            - Authentication flow validation
            - Diary creation and editing
            - Monthly calendar navigation
            - Data synchronization with Supabase
            - UI responsiveness on various devices
            
            ### 🛠️ Build Details
            - **Flutter**: 3.24.3
            - **iOS Target**: 12.0+
            - **Bundle ID**: com.miurataiga.kiwi
            - **Build**: ${{ github.run_number }}
            
            Ready for internal testing! 🥝✨
          draft: false
          prerelease: true
          files: build/ios/ipa/*.ipa
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Notification
        if: success()
        run: |
          echo "🎉 SUCCESS: KIWI iOS app has been built and uploaded to App Store Connect!"
          echo "🧪 TestFlight: Check App Store Connect for processing status"
          echo "📱 Beta Testing: Ready for internal and external testing"
          echo "🔗 App Store Connect: https://appstoreconnect.apple.com/apps"